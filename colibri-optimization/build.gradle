/**************************************************************************************************
 * Copyright (c) 2016, Automation Systems Group, Institute of Computer Aided Automation, TU Wien
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *************************************************************************************************/
 
description = 'Colibri - Optimization'

eclipse
{
	classpath
	{
		file 
		{
			withXml 
			{
				def node = it.asNode()
				
				node.appendNode('classpathentry', [kind: 'src', path: '/colibri-osgi', exported:'true'])
				node.appendNode('classpathentry', [kind: 'src', path: '/colibri-commons', exported:'true'])
				node.appendNode('classpathentry', [kind: 'src', path: '/colibri-messenger', exported:'true'])
			}
		}
	}
}

repositories 
{
	flatDir { dirs 'lib','lib/matlaboptimizer/for_redistribution_only' }
}

dependencies
{
	compile ':javabuilder'
	compile ':matlaboptimizer'
}

dependencies
{
	compile group: 'org.eclipse.jetty.websocket', name: 'javax-websocket-client-impl', version: '9.4.6.v20170531'
	compile group: 'javax.websocket', name: 'javax.websocket-client-api', version: '1.1'
	
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
	
	provided project(':colibri-osgi')
	provided project(':colibri-commons')
    provided project(':colibri-messenger')
}

jar 
{
	baseName = "at.ac.tuwien.auto.colibri.optimization.bundle"
	
	manifest 
	{
		attributes ("Bundle-SymbolicName": "at.ac.tuwien.auto.colibri.optimization.bundle",
		
					"Main-Class": "at.ac.tuwien.auto.colibri.optimization.ColibriOptimization",
		
					"Bundle-Activator": "at.ac.tuwien.auto.colibri.optimization.ColibriOptimizationActivator",
					
					"Import-Package":
								
						"at.ac.tuwien.auto.colibri.messaging, " +
						"at.ac.tuwien.auto.colibri.messaging.exceptions, " +
						"at.ac.tuwien.auto.colibri.messaging.handling, " +
						"at.ac.tuwien.auto.colibri.messaging.types, " +
						
						"at.ac.tuwien.auto.colibri.commons, " +
						
						"javax.swing, "+
						
						"javax.management, " +
						"javax.management.modelmbean, " +
						"javax.naming, " +
						"javax.naming.spi, " +
						"javax.net.ssl, " +
						"javax.sql, " +
						"javax.xml.parsers, " +
						"javax.xml.transform, " +
						"javax.security.auth.login, " + 
						"javax.security.auth.callback, " +
						
						"org.apache.jena.rdf.model, " + 
						"org.apache.jena.update, " +
						"org.apache.jena.sparql.core, " +
						"org.apache.jena.graph, " +
						"org.apache.jena.query, " +
												
						"org.ietf.jgss, " +
						"org.w3c.dom, " +
						"org.xml.sax, " +
						"org.xml.sax.ext, " +
						"org.xml.sax.helpers, " +	
						"org.osgi.framework" )
	}
}
