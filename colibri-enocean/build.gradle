description = 'EnOcean connector bundle for Colibri project'

eclipse
{
	project 
	{
		natures 'org.eclipse.pde.PluginNature'
		buildCommand 'org.eclipse.pde.ManifestBuilder'
		buildCommand 'org.eclipse.pde.SchemaBuilder'
	}
	
	classpath
	{
		file
		{
			beforeMerged 
			{ 
				classpath -> classpath.entries.removeAll { entry -> entry.kind == 'con' } 
			}
			withXml
			{
				def node = it.asNode()
				node.appendNode('classpathentry',[kind: 'con', path: 'org.eclipse.pde.core.requiredPlugins'])
			}
		}
	}
}

configurations 
{
	provided
}

sourceSets
{
	main { compileClasspath += configurations.provided }
}

jar 
{
	from 
	{ 
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } 
	}
	
	manifest 
	{
		attributes (   
			"Manifest-Version": "1.0",
			"Bundle-ManifestVersion": "2",
			"Bundle-Name": "colibri-enocean",
			"Bundle-SymbolicName": "colibri-enocean",
			"Bundle-Version": "1.0.0",
			"Bundle-Activator": "at.ac.tuwien.auto.colibri.connector.enocean.EnOceanBundleActivator",
			"Bundle-Vendor": "Automation Systems Group, Institute of Computer Aided Automation, TU Wien, www.auto.tuwien.ac.at",
			"Import-Package": 	"org.osgi.framework;version='1.3.0'," +
								"at.ac.tuwien.auto.colibri.semantics, "+
								"at.ac.tuwien.auto.colibri.connector"
		)
	}
}


